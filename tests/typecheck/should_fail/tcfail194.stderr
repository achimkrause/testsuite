
tcfail194.hs:9:15:
    No instance for (Enum t0)
      arising from the arithmetic sequence `1 .. 10'
    The type variable `t0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Note: there are several potential instances:
      instance Enum Double -- Defined in `GHC.Float'
      instance Enum Float -- Defined in `GHC.Float'
      instance Integral a => Enum (GHC.Real.Ratio a)
        -- Defined in `GHC.Real'
      ...plus 7 others
    In the expression: [1 .. 10]
    In a stmt of a list comprehension: x <- [1 .. 10]
    In a stmt of a list comprehension: then take 5 by x

tcfail194.hs:9:16:
    No instance for (Num t0) arising from the literal `1'
    The type variable `t0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Note: there are several potential instances:
      instance Num Double -- Defined in `GHC.Float'
      instance Num Float -- Defined in `GHC.Float'
      instance Integral a => Num (GHC.Real.Ratio a)
        -- Defined in `GHC.Real'
      ...plus three others
    In the expression: 1
    In the expression: [1 .. 10]
    In a stmt of a list comprehension: x <- [1 .. 10]

tcfail194.hs:9:29:
    Couldn't match type `[a0]' with `a -> t0'
    Expected type: (a -> t0) -> [a] -> [a]
      Actual type: [a0] -> [a0]
    In the return type of a call of `take'
    Probable cause: `take' is applied to too many arguments
    In the expression: take 5
    In a stmt of a list comprehension: then take 5 by x
